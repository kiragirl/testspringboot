#开发模式下 devtools 重启触发文件 在运行中修改其他文件 需要重启时修改本文件 触发重启
spring.devtools.restart.trigger-file=restart_trigger
# 打印debug日志
debug=false
#logging.path=logs/
#logging.level.root=INFO
#logging.level.test.springboot.hello=DEBUG
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
# 测试properties files https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-external-config
name=liyiming
#boot-features-external-config-random-values
#my.secret=${random.value}
my.number=${random.int}
my.bignumber=${random.long}
my.uuid=${random.uuid}
my.number.less.than.ten=${random.int(10)}
my.number.in.range=${random.int[1024,65536]}
#server.port
server.port=8081

spring.datasource.url=jdbc:mysql://47.104.66.43:3306/test
spring.datasource.username=root
spring.datasource.password=WnTxp2096d
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#active mq
spring.activemq.broker-url=tcp://127.0.0.1:61616
spring.activemq.user=admin
spring.activemq.password=admin
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=50
spring.activemq.in-memory=false

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
#spring.redis.database=0  
# Redis服务器地址
#spring.redis.host=127.0.0.1
# Redis服务器连接端口
#spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
#spring.redis.password=  
# 连接池最大连接数（使用负值表示没有限制）
#spring.redis.pool.max-active=8  
# 连接池最大阻塞等待时间（使用负值表示没有限制）
#spring.redis.pool.max-wait=-1  
# 连接池中的最大空闲连接
#spring.redis.pool.max-idle=8  
# 连接池中的最小空闲连接
#spring.redis.pool.min-idle=0  
# 连接超时时间（毫秒）
#spring.redis.timeout=0  

#redisson 配置
#redis链接地址
spring.redisson.address=//127.0.0.1:6379
#当前处理核数量 * 2
spring.redisson.thread=4
#指定编解码
spring.redisson.codec=org.redisson.codec.JsonJacksonCodec;
#最小空闲连接数,默认值:10,最小保持连接数（长连接）
spring.redisson.connectionMinimumIdleSize=12
#连接空闲超时，单位：毫秒 默认10000;当前连接池里的连接数量超过了最小空闲连接数，
#而连接空闲时间超过了该数值，这些连接将会自动被关闭，并从连接池里去掉
spring.redisson.idleConnectionTimeout=10000
#ping节点超时,单位：毫秒,默认1000
spring.redisson.pingTimeout=1000
#连接等待超时,单位：毫秒,默认10000
spring.redisson.connectTimeout=10000
#命令等待超时,单位：毫秒,默认3000；等待节点回复命令的时间。该时间从命令发送成功时开始计时
spring.redisson.timeout=3000
#命令失败重试次数，默认值:3
spring.redisson.retryAttempts=2
#命令重试发送时间间隔，单位：毫秒,默认值:1500
spring.redisson.retryInterval=1500
#重新连接时间间隔，单位：毫秒,默认值：3000;连接断开时，等待与其重新建立连接的时间间隔
spring.redisson.reconnectionTimeout=3000
#执行失败最大次数, 默认值：3；失败后直到 reconnectionTimeout超时以后再次尝试。
spring.redisson.failedAttempts=2
#身份验证密码
#spring.redisson.password=
#单个连接最大订阅数量，默认值：5
spring.redisson.subscriptionsPerConnection=5
#客户端名称
#spring.redisson.clientName=
#发布和订阅连接的最小空闲连接数，默认值：1；Redisson内部经常通过发布和订阅来实现许多功能。
#长期保持一定数量的发布订阅连接是必须的
spring.redisson.subscriptionConnectionMinimumIdleSize=1
#发布和订阅连接池大小，默认值：50
spring.redisson.subscriptionConnectionPoolSize=50
#连接池最大容量。默认值：64；连接池的连接数量自动弹性伸缩
spring.redisson.connectionPoolSize=64
#数据库编号，默认值：0
spring.redisson.database=0
#是否启用DNS监测，默认值：false
spring.redisson.dnsMonitoring=false
#DNS监测时间间隔，单位：毫秒，默认值：5000
spring.redisson.dnsMonitoringInterval=5000 
